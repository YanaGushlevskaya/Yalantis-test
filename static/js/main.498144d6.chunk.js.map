{"version":3,"sources":["const/const.js","components/Employees/employeesList.js","utils/dateFormat.js","components/Employees/employeesBirthdays.js","components/Employees/employees.js","components/Main/main.js","App.js","index.js"],"names":["ALPHABET","MONTHES","EmployeesList","props","employees","activeEmployees","handleChange","filterEmployeesByName","letter","filter","employee","lastName","isActiveEmployee","some","activeEmployee","id","className","map","index","length","sort","currEmployee","prevEmployee","localeCompare","firstName","type","value","checked","onChange","formatDate","date","options","formatedDate","day","Date","toLocaleString","month","year","EmployeesBirthdays","filterEmployeesByDob","dob","Employees","useState","setEmployees","useEffect","a","axios","response","data","fetchData","JSON","parse","localStorage","getItem","setActiveEmployees","setItem","stringify","Main","to","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"0QAAMA,EAAW,CACf,IAAK,IAAK,IAAK,IAAK,IAAK,IACzB,IAAK,IAAK,IAAK,IAAK,IAAK,IACzB,IAAK,IAAK,IAAK,IAAK,IAAK,IACzB,IAAK,IAAK,IAAK,IAAK,IAAK,IACzB,IAAK,KAEDC,EAAU,CACd,UAAW,WAAY,QACvB,QAAS,MAAO,OAChB,OAAQ,SAAU,YAClB,UAAW,WAAY,Y,MCPV,SAASC,EAAcC,GAAQ,IAEpCC,EAA6CD,EAA7CC,UAAWC,EAAkCF,EAAlCE,gBAAiBC,EAAiBH,EAAjBG,aAE9BC,EAAwB,SAACC,GAAD,OAAYJ,EAAUK,QAAO,SAAAC,GAAQ,OAAIA,EAASC,SAAS,KAAOH,MAC1FI,EAAmB,SAACF,GAAD,OAAcL,EAAgBQ,MAAK,SAACC,GAAD,OAAoBA,EAAeC,KAAOL,EAASK,OAE/G,OACE,sBAAKC,UAAU,wBAAf,UACE,2CAEA,oBAAIA,UAAU,2BAAd,SACGhB,EAASiB,KAAI,SAACT,EAAQU,GAAT,OACZ,qBAA+BF,UAAU,gBAAzC,UACE,+BAAOR,IAEP,oBAAIQ,UAAU,4BAAd,SAEKT,EAAsBC,GAAQW,OAE5BZ,EAAsBC,GACpBY,MAAK,SAACC,EAAcC,GAAf,OAAgCD,EAAaV,SAASY,cAAcD,EAAaX,aACtFM,KAAI,SAAAP,GAAQ,OACX,6BACE,kCACE,iCAAOA,EAASC,SAAhB,IAA2BD,EAASc,aACpC,uBAAOC,KAAK,WAAWC,MAAOhB,EAASK,GAAIY,QAASf,EAAiBF,GAAWkB,SAAU,kBAAMtB,EAAaI,UAHjH,UAAYF,EAAZ,YAAsBE,EAASK,QAJnC,0CANR,UAAYP,EAAZ,YAAsBU,YCjBjB,SAASW,EAAWC,EAAMC,GACvC,IAAIC,EAEEC,EAAM,IAAIC,KAAKJ,GAAMK,eAAe,UAAW,CAACF,IAAK,YACrDG,EAAQ,IAAIF,KAAKJ,GAAMK,eAAe,UAAW,CAACC,MAAO,SACzDC,EAAO,IAAIH,KAAKJ,GAAMK,eAAe,UAAW,CAACE,KAAM,YAQ7D,MANe,cAAZN,EACDC,EAAeI,EACK,aAAZL,IACRC,EAAY,UAAMC,EAAN,YAAaG,EAAb,aAAuBC,EAAvB,UAGPL,E,MCRM,SAASM,EAAmBnC,GAAQ,IAEzCE,EAAoBF,EAApBE,gBAEFkC,EAAuB,SAACH,GAAD,OAAW/B,EAAgBI,QACtD,SAAAC,GAAQ,OAAImB,EAAWnB,EAAS8B,IAAK,eAAiBJ,MAIxD,OACE,sBAAKpB,UAAU,wBAAf,UACE,oDAEA,oBAAIA,UAAU,2BAAd,SACIX,EAAgBc,OAIhBlB,EAAQgB,KAAI,SAAAmB,GAAK,OACfG,EAAqBH,GAAOjB,OAAS,GAErC,+BACE,+BAAOiB,IACP,oBAAIpB,UAAU,iBAAd,SACGuB,EAAqBH,GACnBnB,KAAI,SAAAP,GAAQ,OACX,+BACGA,EAASC,SADZ,IACuBD,EAASc,UADhC,MAC8CK,EAAWnB,EAAS8B,IAAK,cADvE,UAAY9B,EAASK,YAL7B,UAAYqB,OALd,4D,MCfK,SAASK,IAAa,IAAD,EACAC,mBAAS,IADT,mBAC3BtC,EAD2B,KAChBuC,EADgB,KAGlCC,qBAAU,WAAM,4CACd,4BAAAC,EAAA,sEACyBC,IACrB,kEAFJ,OACQC,EADR,OAKEJ,EAAaI,EAASC,MALxB,4CADc,uBAAC,WAAD,wBAQdC,KACC,IAZ+B,MAcYP,mBAASQ,KAAKC,MAAMC,aAAaC,QAAQ,qBAAuB,IAd5E,mBAc3BhD,EAd2B,KAcViD,EAdU,KA6BlC,OAJAV,qBAAU,WACRQ,aAAaG,QAAQ,kBAAmBL,KAAKM,UAAUnD,MACtD,CAACA,IAGF,sBAAKW,UAAU,sBAAf,UACE,cAACd,EAAD,CACEE,UAAWA,EACXC,gBAAiBA,EACjBC,aAlB4B,SAACI,GAEjC4C,EADyB,SAAC5C,GAAD,OAAcL,EAAgBQ,MAAK,SAACC,GAAD,OAAoBA,EAAeC,KAAOL,EAASK,MAE7GH,CAAiBF,GACfL,EAAgBI,QAAO,SAAAY,GAAY,OAAIX,EAASK,KAAOM,EAAaN,MADtE,sBAEMV,GAFN,CAEuBK,QAevB,cAAC4B,EAAD,CAAoBjC,gBAAiBA,O,WCvC5B,SAASoD,IACtB,OACE,qBAAKzC,UAAU,YAAf,SACE,gDAAkB,cAAC,IAAD,CAAM0C,GAAG,2BAAT,iC,WCOTC,MATf,WACE,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,iBAAiBC,UAAWL,IAC9C,cAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,2BAA2BC,UAAWrB,QCH9DsB,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.498144d6.chunk.js","sourcesContent":["const ALPHABET = [\n  'A', 'B', 'C', 'D', 'E', 'F',\n  'G', 'H', 'I', 'J', 'K', 'L',\n  'M', 'N', 'O', 'P', 'Q', 'R',\n  'S', 'T', 'U', 'V', 'W', 'X',\n  'Y', 'Z'];\n\nconst MONTHES = [\n  'January', 'February', 'March',\n  'April', 'May', 'June',\n  'July', 'August', 'September',\n  'October', 'November', 'December'];\n\nexport { ALPHABET, MONTHES };","import React from 'react';\nimport { ALPHABET } from 'const/const';\nimport './employeesList.css';\n\nexport default function EmployeesList(props) {\n\n  const { employees, activeEmployees, handleChange } = props;\n\n  const filterEmployeesByName = (letter) => employees.filter(employee => employee.lastName[0] === letter);\n  const isActiveEmployee = (employee) => activeEmployees.some((activeEmployee) => activeEmployee.id === employee.id);\n\n  return (\n    <div className='alphabet-list-wrapper'>\n      <h2>Employees</h2>\n\n      <ul className='alphabet-list reset-list'>\n        {ALPHABET.map((letter, index) => (\n          <li key={`${letter}-${index}`} className='alphabet-item'>\n            <span>{letter}</span>\n\n            <ul className='employees-list reset-list'>\n              {\n                !filterEmployeesByName(letter).length ?\n                  <li>----</li> :\n                  (filterEmployeesByName(letter)\n                    .sort((currEmployee, prevEmployee) => currEmployee.lastName.localeCompare(prevEmployee.lastName))\n                    .map(employee =>\n                      <li key={`${letter}-${employee.id}`}>\n                        <label>\n                          <span>{employee.lastName} {employee.firstName}</span>\n                          <input type=\"checkbox\" value={employee.id} checked={isActiveEmployee(employee)} onChange={() => handleChange(employee)} />\n                        </label>\n                      </li>\n                    )\n                  )\n              }\n            </ul>\n          </li>\n        ))\n        }\n      </ul>\n    </div>\n  )\n}\n","export default function formatDate(date, options) {\n  let formatedDate;\n\n  const day = new Date(date).toLocaleString('default', {day: 'numeric'});\n  const month = new Date(date).toLocaleString('default', {month: 'long'});\n  const year = new Date(date).toLocaleString('default', {year: 'numeric'});\n\n  if(options === 'longMonth') {\n    formatedDate = month;\n  } else if(options === 'fullDate') {\n    formatedDate = `${day} ${month}, ${year} year`\n  }\n\n  return formatedDate;\n}","import React from 'react';\nimport { MONTHES } from 'const/const';\nimport formatDate from 'utils/dateFormat';\nimport './birthdayList.css';\n\nexport default function EmployeesBirthdays(props) {\n\n  const { activeEmployees } = props;\n\n  const filterEmployeesByDob = (month) => activeEmployees.filter(\n    employee => formatDate(employee.dob, 'longMonth') === month\n  );\n\n\n  return (\n    <div className='birthday-list-wrapper'>\n      <h2>Employees birthday</h2>\n\n      <ul className='birthday-list reset-list'>\n        {!activeEmployees.length ?\n\n          <li>No selected employees</li> :\n\n          MONTHES.map(month => (\n            filterEmployeesByDob(month).length > 0\n            &&\n            <li key={`${month}`}>\n              <span>{month}</span>\n              <ul className='employees-list'>\n                {filterEmployeesByDob(month)\n                  .map(employee => (\n                    <li key={`${employee.id}`}>\n                      {employee.lastName} {employee.firstName} - {formatDate(employee.dob, 'fullDate')}\n                    </li>\n                  ))\n                }\n              </ul>\n            </li>\n          ))\n        }\n      </ul>\n    </div>\n  )\n}\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport EmployeesList from './employeesList';\nimport EmployeesBirthdays from './employeesBirthdays';\nimport './employees.css';\n\nexport default function Employees() {\n  const [employees, setEmployees] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      const response = await axios(\n        'https://yalantis-react-school-api.yalantis.com/api/task0/users',\n      );\n\n      setEmployees(response.data);\n    }\n    fetchData();\n  }, []);\n\n  const [activeEmployees, setActiveEmployees] = useState(JSON.parse(localStorage.getItem('activeEmployees')) || []);\n\n  const handleEmployeesListChange = (employee) => {\n    const isActiveEmployee = (employee) => activeEmployees.some((activeEmployee) => activeEmployee.id === employee.id);\n    setActiveEmployees(\n      isActiveEmployee(employee) ?\n        activeEmployees.filter(currEmployee => employee.id !== currEmployee.id) :\n        [...activeEmployees, employee]\n    )\n  }\n\n  useEffect(() => {\n    localStorage.setItem('activeEmployees', JSON.stringify(activeEmployees));\n  }, [activeEmployees])\n\n  return (\n    <div className='employees-container'>\n      <EmployeesList\n        employees={employees}\n        activeEmployees={activeEmployees}\n        handleChange={handleEmployeesListChange}\n      />\n      <EmployeesBirthdays activeEmployees={activeEmployees} />\n    </div>\n  )\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function Main() {\n  return (\n    <div className='main-page'>\n      <h1>Please, go to <Link to='/Yalantis-test/employees'>Employees Page</Link></h1>\n    </div>\n  )\n}","import Employees from './components/Employees/employees';\nimport Main from './components/Main/main';\nimport { Route, Switch } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Switch>\n      <Route exact path=\"/Yalantis-test\" component={Main} />\n      <Route exact path=\"/Yalantis-test/employees\" component={Employees} />\n    </Switch>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}